spring.datasource.driverClassName=org.postgresql.Driver

spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://ec2-34-246-141-162.eu-west-1.compute.amazonaws.com:5432/d3l083ieqqug4i?sslmode=require&createDatabaseIfNotExist=true
spring.datasource.username=yxgdtvikecpyvx
spring.datasource.password=c4aed60a34d185f64942f77e86261cf3aa0e3fa32b4b815af72399b8d566f27b
server.port=${PORT:8081}


#Umesto da sami pišemo SQL skriptu za kreiranje tabela u bazi, Hibernate kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih (create-drop)
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
#Ako želimo sami da kreiramo skriptu za kreiranje tabela potrebno je u src/main/resources folderu kreirati i popuniti fajl pod nazivom schema.sql koji će Spring Boot automatski pokrenuti pri pokretanju aplikacije
#spring.jpa.hibernate.ddl-auto = create-drop

#Hibernate SQL upiti se ispisuju na IDE konzoli
spring.jpa.show-sql = true 

#formatira ispis SQL upita koje Hibernate pravi ka bazi na IDE konzoli
spring.jpa.properties.hibernate.format_sql=true

#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Hibernate optimizacija SQL upita za Postgres bazu
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

spring.mail.host = smtp.gmail.com
spring.mail.username = apoteka.isa2021
spring.mail.password = apoteka2021
spring.mail.port=587
spring.mail.properties.mail.smtp.starttls.enable = true